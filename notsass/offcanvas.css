{{ Root `
    --$offcanvas-zindex: 1045;
    --$offcanvas-width: 400px;
    --$offcanvas-height: 30vh;
    --$offcanvas-padding-x: 1rem;
    --$offcanvas-padding-y: 1rem;
    --$offcanvas-border-width: var(--$border-width);
    --$offcanvas-transition: transform 0.3s ease-in-out;
    --$offcanvas-title-line-height: 1.5;
    --$offcanvas-box-shadow: var(--$box-shadow-sm);
    `
}}
{{ Theme "light" `
    --$offcanvas-color: var(--$body-color);
    --$offcanvas-bg: var(--$body-bg);
    --$offcanvas-border-color: var(--$border-color);
   `
}}
{{ Theme "dark" `
    --$offcanvas-color: var(--$body-color);
    --$offcanvas-bg: var(--$body-bg);
    --$offcanvas-border-color: var(--$border-color);
   `
}}

.offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {
}

{{ define "offcanvas-base.css" }}
    position: fixed;
    bottom: 0;
    z-index: var(--$offcanvas-zindex);
    display: flex;
    flex-direction: column;
    max-width: 100%;
    color: var(--$offcanvas-color);
    visibility: hidden;
    background-color: var(--$offcanvas-bg);
    background-clip: padding-box;
    outline: 0;
    transition: var(--$offcanvas-transition);
{{ end }}
{{ define "offcanvas-start.css" }}
    top: 0;
    left: 0;
    width: var(--$offcanvas-width);
    border-right: var(--$offcanvas-border-width) solid var(--$offcanvas-border-color);
    transform: translateX(-100%);
{{ end }}
{{ define "offcanvas-end.css" }}
    top: 0;
    right: 0;
    width: var(--$offcanvas-width);
    border-left: var(--$offcanvas-border-width) solid var(--$offcanvas-border-color);
    transform: translateX(100%);
{{ end }}
{{ define "offcanvas-top.css" }}
    top: 0;
    right: 0;
    left: 0;
    height: var(--$offcanvas-height);
    max-height: 100%;
    border-bottom: var(--$offcanvas-border-width) solid var(--$offcanvas-border-color);
    transform: translateY(-100%);
{{ end }}
{{ define "offcanvas-bottom.css" }}
    right: 0;
    left: 0;
    height: var(--$offcanvas-height);
    max-height: 100%;
    border-top: var(--$offcanvas-border-width) solid var(--$offcanvas-border-color);
    transform: translateY(100%);
{{ end }}

{{ if Config.EnableBreakpointSmall }}
@media (width < {{ Config.BreakpointSmall }}) {
  .offcanvas-sm {
      {{ template "offcanvas-base.css" . }}
  }
}
@media (width < {{ Config.BreakpointSmall }}) and (prefers-reduced-motion: reduce) {
  .offcanvas-sm {
    transition: none;
  }
}
@media (width < {{ Config.BreakpointSmall }}) {
  .offcanvas-sm.offcanvas-start {
      {{ template "offcanvas-start.css" . }}
  }
  .offcanvas-sm.offcanvas-end {
      {{ template "offcanvas-end.css" . }}
  }
  .offcanvas-sm.offcanvas-top {
      {{ template "offcanvas-top.css" . }}
  }
  .offcanvas-sm.offcanvas-bottom {
      {{ template "offcanvas-bottom.css" . }}
  }
  .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {
    visibility: visible;
  }
}
@media (width >= {{ Config.BreakpointSmall }}) {
  .offcanvas-sm {
    --$offcanvas-height: auto;
    --$offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-sm .offcanvas-header {
    display: none;
  }
  .offcanvas-sm .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
{{ end }}
{{ if Config.EnableBreakpointMedium }}
@media (width < {{ Config.BreakpointMedium }}) {
  .offcanvas-md {
      {{ template "offcanvas-base.css" . }}
  }
}
@media (width < {{ Config.BreakpointMedium }}) and (prefers-reduced-motion: reduce) {
  .offcanvas-md {
    transition: none;
  }
}
@media (width < {{ Config.BreakpointMedium }}) {
  .offcanvas-md.offcanvas-start {
      {{ template "offcanvas-start.css" . }}
  }
  .offcanvas-md.offcanvas-end {
      {{ template "offcanvas-end.css" . }}
  }
  .offcanvas-md.offcanvas-top {
      {{ template "offcanvas-top.css" . }}
  }
  .offcanvas-md.offcanvas-bottom {
      {{ template "offcanvas-bottom.css" . }}
  }
  .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {
    visibility: visible;
  }
}
@media (width >= {{ Config.BreakpointMedium }}) {
  .offcanvas-md {
    --$offcanvas-height: auto;
    --$offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-md .offcanvas-header {
    display: none;
  }
  .offcanvas-md .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
{{ end }}

{{ if Config.EnableBreakpointLarge }}
@media (width < {{ Config.BreakpointLarge }}) {
  .offcanvas-lg {
      {{ template "offcanvas-base.css" . }}
  }
}
@media (width < {{ Config.BreakpointLarge }}) and (prefers-reduced-motion: reduce) {
  .offcanvas-lg {
    transition: none;
  }
}
@media (width < {{ Config.BreakpointLarge }}) {
  .offcanvas-lg.offcanvas-start {
      {{ template "offcanvas-start.css" . }}
  }
  .offcanvas-lg.offcanvas-end {
      {{ template "offcanvas-end.css" . }}
  }
  .offcanvas-lg.offcanvas-top {
      {{ template "offcanvas-top.css" . }}
  }
  .offcanvas-lg.offcanvas-bottom {
      {{ template "offcanvas-bottom.css" . }}
  }
  .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {
    visibility: visible;
  }
}
@media (width >= {{ Config.BreakpointLarge }}) {
  .offcanvas-lg {
    --$offcanvas-height: auto;
    --$offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-lg .offcanvas-header {
    display: none;
  }
  .offcanvas-lg .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
{{ end }}


{{ if Config.EnableBreakpointXLarge }}
@media (width < {{ Config.BreakpointXLarge }}) {
  .offcanvas-xl {
      {{ template "offcanvas-base.css" . }}
  }
}
@media (width < {{ Config.BreakpointXLarge }}) and (prefers-reduced-motion: reduce) {
  .offcanvas-xl {
    transition: none;
  }
}
@media (width < {{ Config.BreakpointXLarge }}) {
  .offcanvas-xl.offcanvas-start {
      {{ template "offcanvas-start.css" . }}
  }
  .offcanvas-xl.offcanvas-end {
      {{ template "offcanvas-end.css" . }}
  }
  .offcanvas-xl.offcanvas-top {
      {{ template "offcanvas-top.css" . }}
  }
  .offcanvas-xl.offcanvas-bottom {
      {{ template "offcanvas-bottom.css" . }}
  }
  .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {
    visibility: visible;
  }
}
@media (width >= {{ Config.BreakpointXLarge }}) {
  .offcanvas-xl {
    --$offcanvas-height: auto;
    --$offcanvas-border-width:0;
    background-color: transparent !important;
  }
  .offcanvas-xl .offcanvas-header {
    display: none;
  }
  .offcanvas-xl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
{{ end }}

{{ if Config.EnableBreakpointXXLarge }}
@media (width < {{ Config.BreakpointXXLarge }}) {
  .offcanvas-xxl {
      {{ template "offcanvas-base.css" . }}
  }
}
@media (width < {{ Config.BreakpointXXLarge }}) and (prefers-reduced-motion: reduce) {
  .offcanvas-xxl {
    transition: none;
  }
}
@media (width < {{ Config.BreakpointXXLarge }}) {
  .offcanvas-xxl.offcanvas-start {
      {{ template "offcanvas-start.css" . }}
  }
  .offcanvas-xxl.offcanvas-end {
      {{ template "offcanvas-end.css" . }}
  }
  .offcanvas-xxl.offcanvas-top {
      {{ template "offcanvas-top.css" . }}
  }
  .offcanvas-xxl.offcanvas-bottom {
      {{ template "offcanvas-bottom.css" . }}
  }
  .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {
    transform: none;
  }
  .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {
    visibility: visible;
  }
}
@media (width >= {{ Config.BreakpointXXL }}) {
  .offcanvas-xxl {
    --$offcanvas-height: auto;
    --$offcanvas-border-width: 0;
    background-color: transparent !important;
  }
  .offcanvas-xxl .offcanvas-header {
    display: none;
  }
  .offcanvas-xxl .offcanvas-body {
    display: flex;
    flex-grow: 0;
    padding: 0;
    overflow-y: visible;
    background-color: transparent !important;
  }
}
{{ end }}

.offcanvas {
    {{ template "offcanvas-base.css" . }}
}
@media (prefers-reduced-motion: reduce) {
  .offcanvas {
    transition: none;
  }
}
.offcanvas.offcanvas-start {
    {{ template "offcanvas-start.css" . }}
}
.offcanvas.offcanvas-end {
    {{ template "offcanvas-end.css" . }}
}
.offcanvas.offcanvas-top {
    {{ template "offcanvas-top.css" . }}
}
.offcanvas.offcanvas-bottom {
    {{ template "offcanvas-bottom.css" . }}
}
.offcanvas.showing, .offcanvas.show:not(.hiding) {
  transform: none;
}
.offcanvas.showing, .offcanvas.hiding, .offcanvas.show {
  visibility: visible;
}

.offcanvas-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1040;
  width: 100vw;
  height: 100vh;
  background-color: #000;
}
.offcanvas-backdrop.fade {
  opacity: 0;
}
.offcanvas-backdrop.show {
  opacity: 0.5;
}
.offcanvas-header {
  display: flex;
  align-items: center;
  padding: var(--$offcanvas-padding-y) var(--$offcanvas-padding-x);
}
.offcanvas-header .btn-close {
  padding: calc(var(--$offcanvas-padding-y) * 0.5) calc(var(--$offcanvas-padding-x) * 0.5);
  margin: calc(-0.5 * var(--$offcanvas-padding-y)) calc(-0.5 * var(--$offcanvas-padding-x)) calc(-0.5 * var(--$offcanvas-padding-y)) auto;
}
.offcanvas-title {
  margin-bottom: 0;
  line-height: var(--$offcanvas-title-line-height);
}
.offcanvas-body {
  flex-grow: 1;
  padding: var(--$offcanvas-padding-y) var(--$offcanvas-padding-x);
  overflow-y: auto;
}

.placeholder {
  display: inline-block;
  min-height: 1em;
  vertical-align: middle;
  cursor: wait;
  background-color: currentcolor;
  opacity: 0.5;
}
.placeholder.btn::before {
  display: inline-block;
  content: "";
}

.placeholder-xs {
  min-height: 0.6em;
}

.placeholder-sm {
  min-height: 0.8em;
}

.placeholder-lg {
  min-height: 1.2em;
}

.placeholder-glow .placeholder {
  animation: placeholder-glow 2s ease-in-out infinite;
}

@keyframes placeholder-glow {
  50% {
    opacity: 0.2;
  }
}
.placeholder-wave {
  -webkit-mask-image: linear-gradient(130deg, #000 55%, rgb(0 0 0 / 80%) 75%, #000 95%);
  mask-image: linear-gradient(130deg, #000 55%, rgb(0 0 0 / 80%) 75%, #000 95%);
  -webkit-mask-size: 200% 100%;
  mask-size: 200% 100%;
  animation: placeholder-wave 2s linear infinite;
}

@keyframes placeholder-wave {
  100% {
    -webkit-mask-position: -200% 0%;
    mask-position: -200% 0%;
  }
}
